// very very important

int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> nsr(n);
        nsr[n-1] = n;
        stack<int> s;
        s.push(n-1);
        
        for(int i = n-2; i >= 0; i--)
        {
            while(!s.empty() && heights[s.top()] >= heights[i])
                s.pop();
            
            if(s.empty())
              nsr[i] = n;
            else
                nsr[i] = s.top();
            
            s.push(i);
        }
        
        vector<int> nsl(n);
        nsl[0] = -1;
        stack<int> s2;
        s2.push(0);
        
        for(int i = 1; i<n; i++)
        {
            while(!s2.empty() && heights[s2.top()] >= heights[i])
                s2.pop();
            
            if(s2.empty())
              nsl[i] = -1;
            else
             nsl[i] = s2.top();
            
            s2.push(i);
        }
        
        int maxArea = INT_MIN;
        
        for(int i = 0 ; i < n ; i++)
        {
            maxArea = max(maxArea, (nsr[i] - nsl[i] - 1) * heights[i]);
        }
         return maxArea; 
    }
